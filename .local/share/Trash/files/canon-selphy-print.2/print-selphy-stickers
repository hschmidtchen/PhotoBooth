#!/bin/sh

# print-selphy-postcard
# 
# Print postcard-sized (148x100mm, 5.8 x 3.9in) images
# on a Canon Selphy CP1200 and compatible photo printers
#
# Usage: print-selphy-postcard [--border] <file>
#
# This script requires ImageMagick, GNU sed and other text processing
# utilities, and CUPS.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#  
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#  
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Configuration parameters:

# Printer name
# Set Wi-Fi printer name, as seen by CUPS.
#
# Corresponding printer entry in CUPS configuration should be something like:
# dnssd://Canon%20SELPHY%20CP1200._ipp._tcp.local/?uuid=<uuid>
#
# To produce that entry for a new printer, use CUPS printer autodetection
# (usually http://localhost:631 , Administration / Add Printer menu) while
# mDNS service discovery is enabled.
#
PRINTER="Canon_SELPHY_CP1200"

# End of configuration parameters.

check="true"
for ex in \
 identify convert grep tr head lpq lpr
  do
    loc=`which "${ex}"`
    if [ "${loc}" = "" ]
      then
        echo "${ex} is missing"
        check="false"
    fi
done

if [ "${check}" = "false" ]
  then
    echo "Some utilities are missing"
    exit 1
fi

lpq -P "${PRINTER}" >/dev/null 2>&1 || check="false"

if [ "${check}" = "false" ]
  then
    echo "Can't check printer ${PRINTER} status"
    exit 1
fi

imggeom="216x270^"

if [ -f "${1}" ]
  then

    tmpdir=$(mktemp -dp "/tmp" "selphy-print.XXXXXX")
    n=1
    while [ "${1}" != "" -a "${n}" != "9" ]
      do
	if \
	  echo $(($(identify "${1}" | tr ' ' '\n' | \
	      grep '^[0-9]\+x[0-9]\+$' | \
              head -n 1 | tr 'x' '-'))) | \
              grep -q - 
          then
            rotateopt="" 
            rot=""
          else
            rotateopt="-rotate"
            rot="90"
        fi
        convert ${rotateopt} ${rot} -resize "${imggeom}" \
                -gravity center -extent "216x270" "${1}" \
                png:"${tmpdir}/t${n}.png"
        n=$((n+1))
        shift
    done

    [ -f "${tmpdir}/t2.png" ] || ln -s t1.png "${tmpdir}/t2.png"
    [ -f "${tmpdir}/t3.png" ] || ln -s t2.png "${tmpdir}/t3.png"
    [ -f "${tmpdir}/t4.png" ] || ln -s t3.png "${tmpdir}/t4.png"
    [ -f "${tmpdir}/t5.png" ] || ln -s t4.png "${tmpdir}/t5.png"
    [ -f "${tmpdir}/t6.png" ] || ln -s t5.png "${tmpdir}/t6.png"
    [ -f "${tmpdir}/t7.png" ] || ln -s t6.png "${tmpdir}/t7.png"
    [ -f "${tmpdir}/t8.png" ] || ln -s t7.png "${tmpdir}/t8.png"

    convert -page "+44+35" -background white -flatten \
	    -extent "1024x640" png:"${tmpdir}/t1.png" png:- | \
    composite -geometry "+44+330" png:"${tmpdir}/t2.png" png:- png:- | \
    composite -geometry "+284+35" png:"${tmpdir}/t3.png" png:- png:- | \
    composite -geometry "+284+330" png:"${tmpdir}/t4.png" png:- png:- | \
    composite -geometry "+524+35" png:"${tmpdir}/t5.png" png:- png:- | \
    composite -geometry "+524+330" png:"${tmpdir}/t6.png" png:- png:- | \
    composite -geometry "+764+35" png:"${tmpdir}/t7.png" png:- png:- | \
    composite -geometry "+764+330" png:"${tmpdir}/t8.png" png:- png:- | \
    convert -page "+34+8" -background white -flatten \
	    -extent "1088x668" png:- -quality 97 jpg:- | \
    lpr -o raw -P "${PRINTER}"
    rm "${tmpdir}/t1.png" "${tmpdir}/t2.png" \
       "${tmpdir}/t3.png" "${tmpdir}/t4.png" \
       "${tmpdir}/t5.png" "${tmpdir}/t6.png" \
       "${tmpdir}/t7.png" "${tmpdir}/t8.png"
    rmdir "${tmpdir}"

  else
    echo "No input file" 1>&2
    exit 1 
fi
